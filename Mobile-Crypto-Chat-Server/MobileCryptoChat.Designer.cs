//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CryptoChatModel", "FK_ChatSessions_Users_From", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mobile_Crypto_Chat_Server.User), "ChatSession", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mobile_Crypto_Chat_Server.ChatSession), true)]
[assembly: EdmRelationshipAttribute("CryptoChatModel", "FK_ChatSessions_Users_To", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mobile_Crypto_Chat_Server.User), "ChatSession", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mobile_Crypto_Chat_Server.ChatSession), true)]
[assembly: EdmRelationshipAttribute("CryptoChatModel", "FK_Messages_Users_From", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mobile_Crypto_Chat_Server.User), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mobile_Crypto_Chat_Server.Message), true)]
[assembly: EdmRelationshipAttribute("CryptoChatModel", "FK_Messages_Users_To", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mobile_Crypto_Chat_Server.User), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mobile_Crypto_Chat_Server.Message), true)]

#endregion

namespace Mobile_Crypto_Chat_Server
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CryptoChatEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CryptoChatEntities object using the connection string found in the 'CryptoChatEntities' section of the application configuration file.
        /// </summary>
        public CryptoChatEntities() : base("name=CryptoChatEntities", "CryptoChatEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CryptoChatEntities object.
        /// </summary>
        public CryptoChatEntities(string connectionString) : base(connectionString, "CryptoChatEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CryptoChatEntities object.
        /// </summary>
        public CryptoChatEntities(EntityConnection connection) : base(connection, "CryptoChatEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChatSession> ChatSessions
        {
            get
            {
                if ((_ChatSessions == null))
                {
                    _ChatSessions = base.CreateObjectSet<ChatSession>("ChatSessions");
                }
                return _ChatSessions;
            }
        }
        private ObjectSet<ChatSession> _ChatSessions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChatSessions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChatSessions(ChatSession chatSession)
        {
            base.AddObject("ChatSessions", chatSession);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CryptoChatModel", Name="ChatSession")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChatSession : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChatSession object.
        /// </summary>
        /// <param name="chatSessionId">Initial value of the ChatSessionId property.</param>
        /// <param name="fromUserId">Initial value of the FromUserId property.</param>
        /// <param name="toUserId">Initial value of the ToUserId property.</param>
        /// <param name="chatState">Initial value of the ChatState property.</param>
        public static ChatSession CreateChatSession(global::System.Int32 chatSessionId, global::System.Int32 fromUserId, global::System.Int32 toUserId, global::System.String chatState)
        {
            ChatSession chatSession = new ChatSession();
            chatSession.ChatSessionId = chatSessionId;
            chatSession.FromUserId = fromUserId;
            chatSession.ToUserId = toUserId;
            chatSession.ChatState = chatState;
            return chatSession;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChatSessionId
        {
            get
            {
                return _ChatSessionId;
            }
            set
            {
                if (_ChatSessionId != value)
                {
                    OnChatSessionIdChanging(value);
                    ReportPropertyChanging("ChatSessionId");
                    _ChatSessionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChatSessionId");
                    OnChatSessionIdChanged();
                }
            }
        }
        private global::System.Int32 _ChatSessionId;
        partial void OnChatSessionIdChanging(global::System.Int32 value);
        partial void OnChatSessionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FromUserId
        {
            get
            {
                return _FromUserId;
            }
            set
            {
                OnFromUserIdChanging(value);
                ReportPropertyChanging("FromUserId");
                _FromUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromUserId");
                OnFromUserIdChanged();
            }
        }
        private global::System.Int32 _FromUserId;
        partial void OnFromUserIdChanging(global::System.Int32 value);
        partial void OnFromUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToUserId
        {
            get
            {
                return _ToUserId;
            }
            set
            {
                OnToUserIdChanging(value);
                ReportPropertyChanging("ToUserId");
                _ToUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToUserId");
                OnToUserIdChanged();
            }
        }
        private global::System.Int32 _ToUserId;
        partial void OnToUserIdChanging(global::System.Int32 value);
        partial void OnToUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ChatState
        {
            get
            {
                return _ChatState;
            }
            set
            {
                OnChatStateChanging(value);
                ReportPropertyChanging("ChatState");
                _ChatState = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ChatState");
                OnChatStateChanged();
            }
        }
        private global::System.String _ChatState;
        partial void OnChatStateChanging(global::System.String value);
        partial void OnChatStateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CryptoChatModel", "FK_ChatSessions_Users_From", "User")]
        public User FromUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CryptoChatModel.FK_ChatSessions_Users_From", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CryptoChatModel.FK_ChatSessions_Users_From", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> FromUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CryptoChatModel.FK_ChatSessions_Users_From", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("CryptoChatModel.FK_ChatSessions_Users_From", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CryptoChatModel", "FK_ChatSessions_Users_To", "User")]
        public User ToUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CryptoChatModel.FK_ChatSessions_Users_To", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CryptoChatModel.FK_ChatSessions_Users_To", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ToUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CryptoChatModel.FK_ChatSessions_Users_To", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("CryptoChatModel.FK_ChatSessions_Users_To", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CryptoChatModel", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="messageId">Initial value of the MessageId property.</param>
        /// <param name="fromUserId">Initial value of the FromUserId property.</param>
        /// <param name="toUserId">Initial value of the ToUserId property.</param>
        /// <param name="msgType">Initial value of the MsgType property.</param>
        /// <param name="msgDate">Initial value of the MsgDate property.</param>
        /// <param name="msgText">Initial value of the MsgText property.</param>
        public static Message CreateMessage(global::System.Int32 messageId, global::System.Int32 fromUserId, global::System.Int32 toUserId, global::System.String msgType, global::System.DateTime msgDate, global::System.String msgText)
        {
            Message message = new Message();
            message.MessageId = messageId;
            message.FromUserId = fromUserId;
            message.ToUserId = toUserId;
            message.MsgType = msgType;
            message.MsgDate = msgDate;
            message.MsgText = msgText;
            return message;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageId
        {
            get
            {
                return _MessageId;
            }
            set
            {
                if (_MessageId != value)
                {
                    OnMessageIdChanging(value);
                    ReportPropertyChanging("MessageId");
                    _MessageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageId");
                    OnMessageIdChanged();
                }
            }
        }
        private global::System.Int32 _MessageId;
        partial void OnMessageIdChanging(global::System.Int32 value);
        partial void OnMessageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FromUserId
        {
            get
            {
                return _FromUserId;
            }
            set
            {
                OnFromUserIdChanging(value);
                ReportPropertyChanging("FromUserId");
                _FromUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromUserId");
                OnFromUserIdChanged();
            }
        }
        private global::System.Int32 _FromUserId;
        partial void OnFromUserIdChanging(global::System.Int32 value);
        partial void OnFromUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToUserId
        {
            get
            {
                return _ToUserId;
            }
            set
            {
                OnToUserIdChanging(value);
                ReportPropertyChanging("ToUserId");
                _ToUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToUserId");
                OnToUserIdChanged();
            }
        }
        private global::System.Int32 _ToUserId;
        partial void OnToUserIdChanging(global::System.Int32 value);
        partial void OnToUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MsgType
        {
            get
            {
                return _MsgType;
            }
            set
            {
                OnMsgTypeChanging(value);
                ReportPropertyChanging("MsgType");
                _MsgType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MsgType");
                OnMsgTypeChanged();
            }
        }
        private global::System.String _MsgType;
        partial void OnMsgTypeChanging(global::System.String value);
        partial void OnMsgTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MsgDate
        {
            get
            {
                return _MsgDate;
            }
            set
            {
                OnMsgDateChanging(value);
                ReportPropertyChanging("MsgDate");
                _MsgDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MsgDate");
                OnMsgDateChanged();
            }
        }
        private global::System.DateTime _MsgDate;
        partial void OnMsgDateChanging(global::System.DateTime value);
        partial void OnMsgDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MsgText
        {
            get
            {
                return _MsgText;
            }
            set
            {
                OnMsgTextChanging(value);
                ReportPropertyChanging("MsgText");
                _MsgText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MsgText");
                OnMsgTextChanged();
            }
        }
        private global::System.String _MsgText;
        partial void OnMsgTextChanging(global::System.String value);
        partial void OnMsgTextChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CryptoChatModel", "FK_Messages_Users_From", "User")]
        public User FromUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CryptoChatModel.FK_Messages_Users_From", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CryptoChatModel.FK_Messages_Users_From", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> FromUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CryptoChatModel.FK_Messages_Users_From", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("CryptoChatModel.FK_Messages_Users_From", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CryptoChatModel", "FK_Messages_Users_To", "User")]
        public User ToUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CryptoChatModel.FK_Messages_Users_To", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CryptoChatModel.FK_Messages_Users_To", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ToUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CryptoChatModel.FK_Messages_Users_To", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("CryptoChatModel.FK_Messages_Users_To", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CryptoChatModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="mSISDN">Initial value of the MSISDN property.</param>
        /// <param name="authCodeSHA1">Initial value of the AuthCodeSHA1 property.</param>
        public static User CreateUser(global::System.Int32 userId, global::System.String mSISDN, global::System.String authCodeSHA1)
        {
            User user = new User();
            user.UserId = userId;
            user.MSISDN = mSISDN;
            user.AuthCodeSHA1 = authCodeSHA1;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MSISDN
        {
            get
            {
                return _MSISDN;
            }
            set
            {
                OnMSISDNChanging(value);
                ReportPropertyChanging("MSISDN");
                _MSISDN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MSISDN");
                OnMSISDNChanged();
            }
        }
        private global::System.String _MSISDN;
        partial void OnMSISDNChanging(global::System.String value);
        partial void OnMSISDNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AuthCodeSHA1
        {
            get
            {
                return _AuthCodeSHA1;
            }
            set
            {
                OnAuthCodeSHA1Changing(value);
                ReportPropertyChanging("AuthCodeSHA1");
                _AuthCodeSHA1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AuthCodeSHA1");
                OnAuthCodeSHA1Changed();
            }
        }
        private global::System.String _AuthCodeSHA1;
        partial void OnAuthCodeSHA1Changing(global::System.String value);
        partial void OnAuthCodeSHA1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SessionKey
        {
            get
            {
                return _SessionKey;
            }
            set
            {
                OnSessionKeyChanging(value);
                ReportPropertyChanging("SessionKey");
                _SessionKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SessionKey");
                OnSessionKeyChanged();
            }
        }
        private global::System.String _SessionKey;
        partial void OnSessionKeyChanging(global::System.String value);
        partial void OnSessionKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastActivity
        {
            get
            {
                return _LastActivity;
            }
            set
            {
                OnLastActivityChanging(value);
                ReportPropertyChanging("LastActivity");
                _LastActivity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivity");
                OnLastActivityChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastActivity;
        partial void OnLastActivityChanging(Nullable<global::System.DateTime> value);
        partial void OnLastActivityChanged();

        #endregion
    
    }

    #endregion
    
}
